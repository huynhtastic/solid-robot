CREATE SEQUENCE txn_id_seq
  MINVALUE 1
  MAXVALUE 99999999
  START WITH 1
  INCREMENT BY 1
;

CREATE TABLE KTransactions (
  txn_id NUMBER,
  sender_id NUMBER,
  recipient_id NUMBER,
  amount NUMBER,
  txn_date DATE,
  CONSTRAINT pk_ktransaction PRIMARY KEY (txn_id),
  CONSTRAINT fk_sender
    FOREIGN KEY (sender_id)
    REFERENCES Employees(emp_id),
  CONSTRAINT fk_recipient
    FOREIGN KEY (recipient_id)
    REFERENCES Employees(emp_id)
);

CREATE TABLE Employees (
  emp_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  username VARCHAR(20) UNIQUE NOT NULL,
  password VARCHAR(64) NOT NULL,
  first_name VARCHAR(20) NOT NULL,
  last_name VARCHAR(20) NOT NULL,
  email VARCHAR(20) UNIQUE NOT NULL,
  admin NUMBER(1) DEFAULT ON NULL 0,
  points_received NUMBER DEFAULT ON NULL 0,
  points_giveable NUMBER DEFAULT ON NULL 0,
  CONSTRAINT pk_employees PRIMARY KEY (emp_id)
);

CREATE TRIGGER ktransactions_on_insert
  BEFORE INSERT ON Ktransactions
  FOR EACH ROW
BEGIN
  SELECT txn_id_seq.nextval
  INTO :new.txn_id
  FROM dual;
END;

CREATE OR REPLACE PROCEDURE giveKudos
( p_sender_id IN ktransactions.sender_id%type,
  p_recipient_username IN employees.username%type,
  p_amount IN ktransactions.amount%type,
  p_txn_date IN VARCHAR
)
AS
  d_recipient_id NUMBER;
  d_sender_balance NUMBER;
  d_recipient_balance NUMBER;
BEGIN
  SELECT emp_id INTO d_recipient_id
  FROM Employees WHERE username = p_recipient_username;
  SELECT points_giveable - p_amount INTO d_sender_balance
  FROM Employees WHERE emp_id = p_sender_id;
  SELECT points_received + p_amount INTO d_recipient_balance
  FROM Employees WHERE emp_id = d_recipient_id;

  INSERT INTO ktransactions (sender_id, recipient_id, amount, txn_date)
  VALUES (p_sender_id, d_recipient_id, p_amount, TO_DATE(p_txn_date, 'YYYY-MM-DD HH24:MI:SS'));
  commit;

  UPDATE Employees
  SET points_giveable = d_sender_balance WHERE emp_id = p_sender_id;
  commit;

  UPDATE Employees
  SET points_received = d_recipient_balance WHERE emp_id = d_recipient_id;
  commit;
END giveKudos;
